#
# Copyright 2007-2016, Kaazing Corporation. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Autobahn test case 5.7

# Case Description
# Send text Message fragmented into 2 fragments, one ping with payload in-between. Octets are sent in frame-wise chops.

# Case Expectation
# A pong is received, then the message is echo'ed back to us.

connect tcp://localhost:8555
connected

write "GET /echo HTTP/1.1\r\n"
write "User-Agent: AutobahnTestSuite/0.6.1-0.8.8\r\n"
write "Host: localhost:8555\r\n"
write "Upgrade: WebSocket\r\n"
write "Connection: Upgrade\r\n"
write "Pragma: no-cache\r\n"
write "Cache-Control: no-cache\r\n"
write "Sec-WebSocket-Key: zBjSBs957Acwkr7agLbxfg==\r\n"
write "Sec-WebSocket-Version: 13\r\n"
write "\r\n"

read "HTTP/1.1 101 Web Socket Protocol Handshake\r\n"
read "Connection: Upgrade\r\n"
read /Date: .*\r\n/
read "Sec-WebSocket-Accept: 0xxxkeEmKfhxqDCLebEDSHdtf28=\r\n"
read "Server: Kaazing Gateway\r\n"
read "Upgrade: WebSocket\r\n"
read "\r\n"

# Websocket text fragment 1
write [0x01 0x89 0xe0 0xde 0x94 0xf8 0x86 0xac 0xf5 0x9f 0x8d 0xbb 0xfa 0x8c 0xd1]

# Websocket ping with payload
write [0x89 0x8c 0x15 0x92 0x07 0x10 0x65 0xfb 0x69 0x77 0x35 0xe2 0x66 0x69 0x79 0xfd 0x66 0x74]

# fragment 2
write [0x80 0x89 0x9c 0xa1 0xf5 0x97 0xfa 0xd3 0x94 0xf0 0xf1 0xc4 0x9b 0xe3 0xae]

# read text fragment 1
read [0x01 0x09 0x66 0x72 0x61 0x67 0x6d 0x65 0x6e 0x74 0x31]

# Websocket pong with payload
read [0x8a 0x0c 0x70 0x69 0x6e 0x67 0x20 0x70 0x61 0x79 0x6c 0x6f 0x61 0x64]

# read text fragment 2
read [0x80 0x09 0x66 0x72 0x61 0x67 0x6d 0x65 0x6e 0x74 0x32]

# Websocket close with normal closure
write [0x88 0x82 0x3f 0x97 0x10 0xae 0x3c 0x7f]
read [0x88 0x02 0x03 0xe8]

close
closed