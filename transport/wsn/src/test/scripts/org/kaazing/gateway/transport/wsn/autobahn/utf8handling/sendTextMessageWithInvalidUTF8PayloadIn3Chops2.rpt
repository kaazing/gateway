#
# Copyright 2007-2016, Kaazing Corporation. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Autobahn test case 6.4.4

# Case Description
# Same as Case 6.4.2, but we send message not in 3 frames, but in 3 chops of the same message frame. 
# MESSAGE PARTS:
# PART1 = cebae1bdb9cf83cebcceb5f4
# PART2 = 90
# PART3 = 

# Case Expectation
# The first chop is accepted, we expect to timeout on the first wait. 
# The 2nd chop should be rejected immediately (fail fast on UTF-8). 
# If we timeout, we expect the connection is failed at least then, since the complete message payload is not valid UTF-8.

connect tcp://localhost:8555
connected

write "GET /echo HTTP/1.1\r\n"
write "User-Agent: AutobahnTestSuite/0.6.1-0.8.8\r\n"
write "Host: localhost:8555\r\n"
write "Upgrade: WebSocket\r\n"
write "Connection: Upgrade\r\n"
write "Pragma: no-cache\r\n"
write "Cache-Control: no-cache\r\n"
write "Sec-WebSocket-Key: suXDfWU41qN8zM53okKeDQ==\r\n"
write "Sec-WebSocket-Version: 13\r\n"
write "\r\n"

read "HTTP/1.1 101 Web Socket Protocol Handshake\r\n"
read "Connection: Upgrade\r\n"
read /Date: .*\r\n/
read "Sec-WebSocket-Accept: JPQCt19Y3a5txEF23EA/bEc8cdM=\r\n"
read "Server: Kaazing Gateway\r\n"
read "Upgrade: WebSocket\r\n"
read "\r\n"

# Websocket text in fragments (part 1 and 2)
write [0x01 0x95 0xc2 0x9f 0x58 0x53 0x0c 0x25 0xb9 0xee 0x7b 0x50 0xdb 0x9d 0x7e 0x51 0xed 0xa7]
write [0x52]

# fail fast on utf-8, so didn't bother writing rest of message

# Websocket close with close code 1007 (invalid frame payload data) 
read [0x88 0x02 0x03 0xef]
write [0x88 0x82 0xb3 0xb2 0x39 0x34 0xb0 0x5a]

# Server should close the connection

closed