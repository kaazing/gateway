#
# Copyright 2007-2016, Kaazing Corporation. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Autobahn test case 6.4.2

# Case Description
# Same as Case 6.4.1, but in 2nd frame, we send only up to and including the octet making the complete payload invalid. 
# MESSAGE PARTS:
# PART1 = cebae1bdb9cf83cebcceb5f4
# PART2 = 90
# PART3 = 8080656469746564

# Case Expectation
# The first frame is accepted, we expect to timeout on the first wait. 
# The 2nd frame should be rejected immediately (fail fast on UTF-8). 
# If we timeout, we expect the connection is failed at least then, since the complete message payload is not valid UTF-8.

connect tcp://localhost:8555
connected

write "GET /echo HTTP/1.1\r\n"
write "User-Agent: AutobahnTestSuite/0.6.1-0.8.8\r\n"
write "Host: localhost:8555\r\n"
write "Upgrade: WebSocket\r\n"
write "Connection: Upgrade\r\n"
write "Pragma: no-cache\r\n"
write "Cache-Control: no-cache\r\n"
write "Sec-WebSocket-Key: KEqzNz3MInzjDr9LSNeW+g==\r\n"
write "Sec-WebSocket-Version: 13\r\n"
write "\r\n"

read "HTTP/1.1 101 Web Socket Protocol Handshake\r\n"
read "Connection: Upgrade\r\n"
read /Date: .*\r\n/
read "Sec-WebSocket-Accept: Mmu6InT0NFZHhgF5jslaKoZ0F4I=\r\n"
read "Server: Kaazing Gateway\r\n"
read "Upgrade: WebSocket\r\n"
read "\r\n"

# Websocket text in fragments (part 1 and 2)
write [0x01 0x8c 0x35 0x1d 0xb6 0xbe 0xfb 0xa7 0x57 0x03 0x8c 0xd2 0x35 0x70 0x89 0xd3 0x03 0x4a]
write [0x00 0x81 0xc8 0xdf 0x43 0xd9 0x58]

# Websocket close with close code 1007 (invalid frame payload data) 
read [0x88 0x02 0x03 0xef]
write [0x88 0x82 0xa4 0x30 0x59 0xec 0xa7 0xdf]

# Server should close the connection

closed