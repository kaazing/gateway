#
# Copyright 2007-2016, Kaazing Corporation. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Autobahn test case 6.2.4

# Case Description
# Send a valid UTF-8 text message in fragments of 1 octet, resulting in frames ending on positions which are not code point ends.
# MESSAGE:
# cebae1bdb9cf83cebcceb5

# Case Expectation
# The message is echo'ed back to us.

connect tcp://localhost:8555
connected

write "GET /echo HTTP/1.1\r\n"
write "User-Agent: AutobahnTestSuite/0.6.1-0.8.8\r\n"
write "Host: localhost:8555\r\n"
write "Upgrade: WebSocket\r\n"
write "Connection: Upgrade\r\n"
write "Pragma: no-cache\r\n"
write "Cache-Control: no-cache\r\n"
write "Sec-WebSocket-Key: qlZ8C/kR+9QG4HrUENgkdg==\r\n"
write "Sec-WebSocket-Version: 13\r\n"
write "\r\n"

read "HTTP/1.1 101 Web Socket Protocol Handshake\r\n"
read "Connection: Upgrade\r\n"
read /Date: .*\r\n/
read "Sec-WebSocket-Accept: k1erenzhgNdGLfBrJQv4h3GjdlE=\r\n"
read "Server: Kaazing Gateway\r\n"
read "Upgrade: WebSocket\r\n"
read "\r\n"


# Websocket text with valid UTF8 payload in 1 octet fragments
write [0x01 0x81 0xbe 0x7c 0xf6 0x6d 0x70]
write [0x00 0x81 0x16 0x88 0x9a 0x12 0xac] 
write [0x00 0x81 0xfc 0x5a 0xa9 0xa0 0x1d]
write [0x00 0x81 0x1a 0xbb 0x85 0x92 0xa7]
write [0x00 0x81 0x18 0xdb 0x27 0x2c 0xa1]
write [0x00 0x81 0x99 0x88 0x04 0xad 0x56]
write [0x00 0x81 0x5d 0x8c 0x0f 0x75 0xde]
write [0x00 0x81 0x68 0x2b 0xba 0xdd 0xa6]
write [0x00 0x81 0x6a 0x56 0xd5 0x9d 0xd6]
write [0x00 0x81 0x06 0x90 0x03 0x74 0xc8]
write [0x00 0x81 0xb7 0xad 0x58 0xa0 0x02]
write [0x80 0x80 0xd6 0xe0 0xd4 0xfb]
read [0x81 0x0b 0xce 0xba 0xe1 0xbd 0xb9 0xcf 0x83 0xce 0xbc 0xce 0xb5]

# Websocket close with normal closure
write [0x88 0x82 0x87 0x4b 0x33 0x2d 0x84 0xa3]
read [0x88 0x02 0x03 0xe8]

close
closed